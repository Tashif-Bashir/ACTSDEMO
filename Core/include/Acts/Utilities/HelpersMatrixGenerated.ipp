//////////////////////////////////////////////////
// This function is AUTOGENERATED. Do not edit! //
//////////////////////////////////////////////////
inline ActsMatrix<2, 2> multiply(const ActsMatrix<2, 2>& A, const ActsMatrix<2, 2>& B) {
  ActsMatrix<2, 2> C;double* pC = C.data();
  const double* pA = A.data();
  const double* pB = B.data();

  pC[0] = pA[0] * pB[0] + pA[2] * pB[1];
  pC[2] = pA[0] * pB[2] + pA[2] * pB[3];
  pC[1] = pA[1] * pB[0] + pA[3] * pB[1];
  pC[3] = pA[1] * pB[2] + pA[3] * pB[3];

  return C;
}

//////////////////////////////////////////////////
// This function is AUTOGENERATED. Do not edit! //
//////////////////////////////////////////////////
inline ActsMatrix<1, 1> multiply(const ActsMatrix<1, 2>& A, const ActsMatrix<2, 1>& B) {
  ActsMatrix<1, 1> C;double* pC = C.data();
  const double* pA = A.data();
  const double* pB = B.data();

  pC[0] = pA[0] * pB[0] + pA[1] * pB[1];

  return C;
}

//////////////////////////////////////////////////
// This function is AUTOGENERATED. Do not edit! //
//////////////////////////////////////////////////
inline ActsMatrix<8, 8> multiply(const ActsMatrix<8, 1>& A, const ActsMatrix<1, 8>& B) {
  ActsMatrix<8, 8> C;double* pC = C.data();
  const double* pA = A.data();
  const double* pB = B.data();

  pC[0] = pA[0] * pB[0];
  pC[8] = pA[0] * pB[1];
  pC[16] = pA[0] * pB[2];
  pC[24] = pA[0] * pB[3];
  pC[32] = pA[0] * pB[4];
  pC[40] = pA[0] * pB[5];
  pC[48] = pA[0] * pB[6];
  pC[56] = pA[0] * pB[7];
  pC[1] = pA[1] * pB[0];
  pC[9] = pA[1] * pB[1];
  pC[17] = pA[1] * pB[2];
  pC[25] = pA[1] * pB[3];
  pC[33] = pA[1] * pB[4];
  pC[41] = pA[1] * pB[5];
  pC[49] = pA[1] * pB[6];
  pC[57] = pA[1] * pB[7];
  pC[2] = pA[2] * pB[0];
  pC[10] = pA[2] * pB[1];
  pC[18] = pA[2] * pB[2];
  pC[26] = pA[2] * pB[3];
  pC[34] = pA[2] * pB[4];
  pC[42] = pA[2] * pB[5];
  pC[50] = pA[2] * pB[6];
  pC[58] = pA[2] * pB[7];
  pC[3] = pA[3] * pB[0];
  pC[11] = pA[3] * pB[1];
  pC[19] = pA[3] * pB[2];
  pC[27] = pA[3] * pB[3];
  pC[35] = pA[3] * pB[4];
  pC[43] = pA[3] * pB[5];
  pC[51] = pA[3] * pB[6];
  pC[59] = pA[3] * pB[7];
  pC[4] = pA[4] * pB[0];
  pC[12] = pA[4] * pB[1];
  pC[20] = pA[4] * pB[2];
  pC[28] = pA[4] * pB[3];
  pC[36] = pA[4] * pB[4];
  pC[44] = pA[4] * pB[5];
  pC[52] = pA[4] * pB[6];
  pC[60] = pA[4] * pB[7];
  pC[5] = pA[5] * pB[0];
  pC[13] = pA[5] * pB[1];
  pC[21] = pA[5] * pB[2];
  pC[29] = pA[5] * pB[3];
  pC[37] = pA[5] * pB[4];
  pC[45] = pA[5] * pB[5];
  pC[53] = pA[5] * pB[6];
  pC[61] = pA[5] * pB[7];
  pC[6] = pA[6] * pB[0];
  pC[14] = pA[6] * pB[1];
  pC[22] = pA[6] * pB[2];
  pC[30] = pA[6] * pB[3];
  pC[38] = pA[6] * pB[4];
  pC[46] = pA[6] * pB[5];
  pC[54] = pA[6] * pB[6];
  pC[62] = pA[6] * pB[7];
  pC[7] = pA[7] * pB[0];
  pC[15] = pA[7] * pB[1];
  pC[23] = pA[7] * pB[2];
  pC[31] = pA[7] * pB[3];
  pC[39] = pA[7] * pB[4];
  pC[47] = pA[7] * pB[5];
  pC[55] = pA[7] * pB[6];
  pC[63] = pA[7] * pB[7];

  return C;
}

//////////////////////////////////////////////////
// This function is AUTOGENERATED. Do not edit! //
//////////////////////////////////////////////////
inline ActsMatrix<6, 8> multiply(const ActsMatrix<6, 8>& A, const ActsMatrix<8, 8>& B) {
  ActsMatrix<6, 8> C;double* pC = C.data();
  const double* pA = A.data();
  const double* pB = B.data();

  pC[0] = pA[0] * pB[0] + pA[6] * pB[1] + pA[12] * pB[2] + pA[18] * pB[3] + pA[24] * pB[4] + pA[30] * pB[5] + pA[36] * pB[6] + pA[42] * pB[7];
  pC[6] = pA[0] * pB[8] + pA[6] * pB[9] + pA[12] * pB[10] + pA[18] * pB[11] + pA[24] * pB[12] + pA[30] * pB[13] + pA[36] * pB[14] + pA[42] * pB[15];
  pC[12] = pA[0] * pB[16] + pA[6] * pB[17] + pA[12] * pB[18] + pA[18] * pB[19] + pA[24] * pB[20] + pA[30] * pB[21] + pA[36] * pB[22] + pA[42] * pB[23];
  pC[18] = pA[0] * pB[24] + pA[6] * pB[25] + pA[12] * pB[26] + pA[18] * pB[27] + pA[24] * pB[28] + pA[30] * pB[29] + pA[36] * pB[30] + pA[42] * pB[31];
  pC[24] = pA[0] * pB[32] + pA[6] * pB[33] + pA[12] * pB[34] + pA[18] * pB[35] + pA[24] * pB[36] + pA[30] * pB[37] + pA[36] * pB[38] + pA[42] * pB[39];
  pC[30] = pA[0] * pB[40] + pA[6] * pB[41] + pA[12] * pB[42] + pA[18] * pB[43] + pA[24] * pB[44] + pA[30] * pB[45] + pA[36] * pB[46] + pA[42] * pB[47];
  pC[36] = pA[0] * pB[48] + pA[6] * pB[49] + pA[12] * pB[50] + pA[18] * pB[51] + pA[24] * pB[52] + pA[30] * pB[53] + pA[36] * pB[54] + pA[42] * pB[55];
  pC[42] = pA[0] * pB[56] + pA[6] * pB[57] + pA[12] * pB[58] + pA[18] * pB[59] + pA[24] * pB[60] + pA[30] * pB[61] + pA[36] * pB[62] + pA[42] * pB[63];
  pC[1] = pA[1] * pB[0] + pA[7] * pB[1] + pA[13] * pB[2] + pA[19] * pB[3] + pA[25] * pB[4] + pA[31] * pB[5] + pA[37] * pB[6] + pA[43] * pB[7];
  pC[7] = pA[1] * pB[8] + pA[7] * pB[9] + pA[13] * pB[10] + pA[19] * pB[11] + pA[25] * pB[12] + pA[31] * pB[13] + pA[37] * pB[14] + pA[43] * pB[15];
  pC[13] = pA[1] * pB[16] + pA[7] * pB[17] + pA[13] * pB[18] + pA[19] * pB[19] + pA[25] * pB[20] + pA[31] * pB[21] + pA[37] * pB[22] + pA[43] * pB[23];
  pC[19] = pA[1] * pB[24] + pA[7] * pB[25] + pA[13] * pB[26] + pA[19] * pB[27] + pA[25] * pB[28] + pA[31] * pB[29] + pA[37] * pB[30] + pA[43] * pB[31];
  pC[25] = pA[1] * pB[32] + pA[7] * pB[33] + pA[13] * pB[34] + pA[19] * pB[35] + pA[25] * pB[36] + pA[31] * pB[37] + pA[37] * pB[38] + pA[43] * pB[39];
  pC[31] = pA[1] * pB[40] + pA[7] * pB[41] + pA[13] * pB[42] + pA[19] * pB[43] + pA[25] * pB[44] + pA[31] * pB[45] + pA[37] * pB[46] + pA[43] * pB[47];
  pC[37] = pA[1] * pB[48] + pA[7] * pB[49] + pA[13] * pB[50] + pA[19] * pB[51] + pA[25] * pB[52] + pA[31] * pB[53] + pA[37] * pB[54] + pA[43] * pB[55];
  pC[43] = pA[1] * pB[56] + pA[7] * pB[57] + pA[13] * pB[58] + pA[19] * pB[59] + pA[25] * pB[60] + pA[31] * pB[61] + pA[37] * pB[62] + pA[43] * pB[63];
  pC[2] = pA[2] * pB[0] + pA[8] * pB[1] + pA[14] * pB[2] + pA[20] * pB[3] + pA[26] * pB[4] + pA[32] * pB[5] + pA[38] * pB[6] + pA[44] * pB[7];
  pC[8] = pA[2] * pB[8] + pA[8] * pB[9] + pA[14] * pB[10] + pA[20] * pB[11] + pA[26] * pB[12] + pA[32] * pB[13] + pA[38] * pB[14] + pA[44] * pB[15];
  pC[14] = pA[2] * pB[16] + pA[8] * pB[17] + pA[14] * pB[18] + pA[20] * pB[19] + pA[26] * pB[20] + pA[32] * pB[21] + pA[38] * pB[22] + pA[44] * pB[23];
  pC[20] = pA[2] * pB[24] + pA[8] * pB[25] + pA[14] * pB[26] + pA[20] * pB[27] + pA[26] * pB[28] + pA[32] * pB[29] + pA[38] * pB[30] + pA[44] * pB[31];
  pC[26] = pA[2] * pB[32] + pA[8] * pB[33] + pA[14] * pB[34] + pA[20] * pB[35] + pA[26] * pB[36] + pA[32] * pB[37] + pA[38] * pB[38] + pA[44] * pB[39];
  pC[32] = pA[2] * pB[40] + pA[8] * pB[41] + pA[14] * pB[42] + pA[20] * pB[43] + pA[26] * pB[44] + pA[32] * pB[45] + pA[38] * pB[46] + pA[44] * pB[47];
  pC[38] = pA[2] * pB[48] + pA[8] * pB[49] + pA[14] * pB[50] + pA[20] * pB[51] + pA[26] * pB[52] + pA[32] * pB[53] + pA[38] * pB[54] + pA[44] * pB[55];
  pC[44] = pA[2] * pB[56] + pA[8] * pB[57] + pA[14] * pB[58] + pA[20] * pB[59] + pA[26] * pB[60] + pA[32] * pB[61] + pA[38] * pB[62] + pA[44] * pB[63];
  pC[3] = pA[3] * pB[0] + pA[9] * pB[1] + pA[15] * pB[2] + pA[21] * pB[3] + pA[27] * pB[4] + pA[33] * pB[5] + pA[39] * pB[6] + pA[45] * pB[7];
  pC[9] = pA[3] * pB[8] + pA[9] * pB[9] + pA[15] * pB[10] + pA[21] * pB[11] + pA[27] * pB[12] + pA[33] * pB[13] + pA[39] * pB[14] + pA[45] * pB[15];
  pC[15] = pA[3] * pB[16] + pA[9] * pB[17] + pA[15] * pB[18] + pA[21] * pB[19] + pA[27] * pB[20] + pA[33] * pB[21] + pA[39] * pB[22] + pA[45] * pB[23];
  pC[21] = pA[3] * pB[24] + pA[9] * pB[25] + pA[15] * pB[26] + pA[21] * pB[27] + pA[27] * pB[28] + pA[33] * pB[29] + pA[39] * pB[30] + pA[45] * pB[31];
  pC[27] = pA[3] * pB[32] + pA[9] * pB[33] + pA[15] * pB[34] + pA[21] * pB[35] + pA[27] * pB[36] + pA[33] * pB[37] + pA[39] * pB[38] + pA[45] * pB[39];
  pC[33] = pA[3] * pB[40] + pA[9] * pB[41] + pA[15] * pB[42] + pA[21] * pB[43] + pA[27] * pB[44] + pA[33] * pB[45] + pA[39] * pB[46] + pA[45] * pB[47];
  pC[39] = pA[3] * pB[48] + pA[9] * pB[49] + pA[15] * pB[50] + pA[21] * pB[51] + pA[27] * pB[52] + pA[33] * pB[53] + pA[39] * pB[54] + pA[45] * pB[55];
  pC[45] = pA[3] * pB[56] + pA[9] * pB[57] + pA[15] * pB[58] + pA[21] * pB[59] + pA[27] * pB[60] + pA[33] * pB[61] + pA[39] * pB[62] + pA[45] * pB[63];
  pC[4] = pA[4] * pB[0] + pA[10] * pB[1] + pA[16] * pB[2] + pA[22] * pB[3] + pA[28] * pB[4] + pA[34] * pB[5] + pA[40] * pB[6] + pA[46] * pB[7];
  pC[10] = pA[4] * pB[8] + pA[10] * pB[9] + pA[16] * pB[10] + pA[22] * pB[11] + pA[28] * pB[12] + pA[34] * pB[13] + pA[40] * pB[14] + pA[46] * pB[15];
  pC[16] = pA[4] * pB[16] + pA[10] * pB[17] + pA[16] * pB[18] + pA[22] * pB[19] + pA[28] * pB[20] + pA[34] * pB[21] + pA[40] * pB[22] + pA[46] * pB[23];
  pC[22] = pA[4] * pB[24] + pA[10] * pB[25] + pA[16] * pB[26] + pA[22] * pB[27] + pA[28] * pB[28] + pA[34] * pB[29] + pA[40] * pB[30] + pA[46] * pB[31];
  pC[28] = pA[4] * pB[32] + pA[10] * pB[33] + pA[16] * pB[34] + pA[22] * pB[35] + pA[28] * pB[36] + pA[34] * pB[37] + pA[40] * pB[38] + pA[46] * pB[39];
  pC[34] = pA[4] * pB[40] + pA[10] * pB[41] + pA[16] * pB[42] + pA[22] * pB[43] + pA[28] * pB[44] + pA[34] * pB[45] + pA[40] * pB[46] + pA[46] * pB[47];
  pC[40] = pA[4] * pB[48] + pA[10] * pB[49] + pA[16] * pB[50] + pA[22] * pB[51] + pA[28] * pB[52] + pA[34] * pB[53] + pA[40] * pB[54] + pA[46] * pB[55];
  pC[46] = pA[4] * pB[56] + pA[10] * pB[57] + pA[16] * pB[58] + pA[22] * pB[59] + pA[28] * pB[60] + pA[34] * pB[61] + pA[40] * pB[62] + pA[46] * pB[63];
  pC[5] = pA[5] * pB[0] + pA[11] * pB[1] + pA[17] * pB[2] + pA[23] * pB[3] + pA[29] * pB[4] + pA[35] * pB[5] + pA[41] * pB[6] + pA[47] * pB[7];
  pC[11] = pA[5] * pB[8] + pA[11] * pB[9] + pA[17] * pB[10] + pA[23] * pB[11] + pA[29] * pB[12] + pA[35] * pB[13] + pA[41] * pB[14] + pA[47] * pB[15];
  pC[17] = pA[5] * pB[16] + pA[11] * pB[17] + pA[17] * pB[18] + pA[23] * pB[19] + pA[29] * pB[20] + pA[35] * pB[21] + pA[41] * pB[22] + pA[47] * pB[23];
  pC[23] = pA[5] * pB[24] + pA[11] * pB[25] + pA[17] * pB[26] + pA[23] * pB[27] + pA[29] * pB[28] + pA[35] * pB[29] + pA[41] * pB[30] + pA[47] * pB[31];
  pC[29] = pA[5] * pB[32] + pA[11] * pB[33] + pA[17] * pB[34] + pA[23] * pB[35] + pA[29] * pB[36] + pA[35] * pB[37] + pA[41] * pB[38] + pA[47] * pB[39];
  pC[35] = pA[5] * pB[40] + pA[11] * pB[41] + pA[17] * pB[42] + pA[23] * pB[43] + pA[29] * pB[44] + pA[35] * pB[45] + pA[41] * pB[46] + pA[47] * pB[47];
  pC[41] = pA[5] * pB[48] + pA[11] * pB[49] + pA[17] * pB[50] + pA[23] * pB[51] + pA[29] * pB[52] + pA[35] * pB[53] + pA[41] * pB[54] + pA[47] * pB[55];
  pC[47] = pA[5] * pB[56] + pA[11] * pB[57] + pA[17] * pB[58] + pA[23] * pB[59] + pA[29] * pB[60] + pA[35] * pB[61] + pA[41] * pB[62] + pA[47] * pB[63];

  return C;
}

//////////////////////////////////////////////////
// This function is AUTOGENERATED. Do not edit! //
//////////////////////////////////////////////////
inline ActsMatrix<8, 8> multiply(const ActsMatrix<8, 8>& A, const ActsMatrix<8, 8>& B) {
  ActsMatrix<8, 8> C;double* pC = C.data();
  const double* pA = A.data();
  const double* pB = B.data();

  pC[0] = pA[0] * pB[0] + pA[8] * pB[1] + pA[16] * pB[2] + pA[24] * pB[3] + pA[32] * pB[4] + pA[40] * pB[5] + pA[48] * pB[6] + pA[56] * pB[7];
  pC[8] = pA[0] * pB[8] + pA[8] * pB[9] + pA[16] * pB[10] + pA[24] * pB[11] + pA[32] * pB[12] + pA[40] * pB[13] + pA[48] * pB[14] + pA[56] * pB[15];
  pC[16] = pA[0] * pB[16] + pA[8] * pB[17] + pA[16] * pB[18] + pA[24] * pB[19] + pA[32] * pB[20] + pA[40] * pB[21] + pA[48] * pB[22] + pA[56] * pB[23];
  pC[24] = pA[0] * pB[24] + pA[8] * pB[25] + pA[16] * pB[26] + pA[24] * pB[27] + pA[32] * pB[28] + pA[40] * pB[29] + pA[48] * pB[30] + pA[56] * pB[31];
  pC[32] = pA[0] * pB[32] + pA[8] * pB[33] + pA[16] * pB[34] + pA[24] * pB[35] + pA[32] * pB[36] + pA[40] * pB[37] + pA[48] * pB[38] + pA[56] * pB[39];
  pC[40] = pA[0] * pB[40] + pA[8] * pB[41] + pA[16] * pB[42] + pA[24] * pB[43] + pA[32] * pB[44] + pA[40] * pB[45] + pA[48] * pB[46] + pA[56] * pB[47];
  pC[48] = pA[0] * pB[48] + pA[8] * pB[49] + pA[16] * pB[50] + pA[24] * pB[51] + pA[32] * pB[52] + pA[40] * pB[53] + pA[48] * pB[54] + pA[56] * pB[55];
  pC[56] = pA[0] * pB[56] + pA[8] * pB[57] + pA[16] * pB[58] + pA[24] * pB[59] + pA[32] * pB[60] + pA[40] * pB[61] + pA[48] * pB[62] + pA[56] * pB[63];
  pC[1] = pA[1] * pB[0] + pA[9] * pB[1] + pA[17] * pB[2] + pA[25] * pB[3] + pA[33] * pB[4] + pA[41] * pB[5] + pA[49] * pB[6] + pA[57] * pB[7];
  pC[9] = pA[1] * pB[8] + pA[9] * pB[9] + pA[17] * pB[10] + pA[25] * pB[11] + pA[33] * pB[12] + pA[41] * pB[13] + pA[49] * pB[14] + pA[57] * pB[15];
  pC[17] = pA[1] * pB[16] + pA[9] * pB[17] + pA[17] * pB[18] + pA[25] * pB[19] + pA[33] * pB[20] + pA[41] * pB[21] + pA[49] * pB[22] + pA[57] * pB[23];
  pC[25] = pA[1] * pB[24] + pA[9] * pB[25] + pA[17] * pB[26] + pA[25] * pB[27] + pA[33] * pB[28] + pA[41] * pB[29] + pA[49] * pB[30] + pA[57] * pB[31];
  pC[33] = pA[1] * pB[32] + pA[9] * pB[33] + pA[17] * pB[34] + pA[25] * pB[35] + pA[33] * pB[36] + pA[41] * pB[37] + pA[49] * pB[38] + pA[57] * pB[39];
  pC[41] = pA[1] * pB[40] + pA[9] * pB[41] + pA[17] * pB[42] + pA[25] * pB[43] + pA[33] * pB[44] + pA[41] * pB[45] + pA[49] * pB[46] + pA[57] * pB[47];
  pC[49] = pA[1] * pB[48] + pA[9] * pB[49] + pA[17] * pB[50] + pA[25] * pB[51] + pA[33] * pB[52] + pA[41] * pB[53] + pA[49] * pB[54] + pA[57] * pB[55];
  pC[57] = pA[1] * pB[56] + pA[9] * pB[57] + pA[17] * pB[58] + pA[25] * pB[59] + pA[33] * pB[60] + pA[41] * pB[61] + pA[49] * pB[62] + pA[57] * pB[63];
  pC[2] = pA[2] * pB[0] + pA[10] * pB[1] + pA[18] * pB[2] + pA[26] * pB[3] + pA[34] * pB[4] + pA[42] * pB[5] + pA[50] * pB[6] + pA[58] * pB[7];
  pC[10] = pA[2] * pB[8] + pA[10] * pB[9] + pA[18] * pB[10] + pA[26] * pB[11] + pA[34] * pB[12] + pA[42] * pB[13] + pA[50] * pB[14] + pA[58] * pB[15];
  pC[18] = pA[2] * pB[16] + pA[10] * pB[17] + pA[18] * pB[18] + pA[26] * pB[19] + pA[34] * pB[20] + pA[42] * pB[21] + pA[50] * pB[22] + pA[58] * pB[23];
  pC[26] = pA[2] * pB[24] + pA[10] * pB[25] + pA[18] * pB[26] + pA[26] * pB[27] + pA[34] * pB[28] + pA[42] * pB[29] + pA[50] * pB[30] + pA[58] * pB[31];
  pC[34] = pA[2] * pB[32] + pA[10] * pB[33] + pA[18] * pB[34] + pA[26] * pB[35] + pA[34] * pB[36] + pA[42] * pB[37] + pA[50] * pB[38] + pA[58] * pB[39];
  pC[42] = pA[2] * pB[40] + pA[10] * pB[41] + pA[18] * pB[42] + pA[26] * pB[43] + pA[34] * pB[44] + pA[42] * pB[45] + pA[50] * pB[46] + pA[58] * pB[47];
  pC[50] = pA[2] * pB[48] + pA[10] * pB[49] + pA[18] * pB[50] + pA[26] * pB[51] + pA[34] * pB[52] + pA[42] * pB[53] + pA[50] * pB[54] + pA[58] * pB[55];
  pC[58] = pA[2] * pB[56] + pA[10] * pB[57] + pA[18] * pB[58] + pA[26] * pB[59] + pA[34] * pB[60] + pA[42] * pB[61] + pA[50] * pB[62] + pA[58] * pB[63];
  pC[3] = pA[3] * pB[0] + pA[11] * pB[1] + pA[19] * pB[2] + pA[27] * pB[3] + pA[35] * pB[4] + pA[43] * pB[5] + pA[51] * pB[6] + pA[59] * pB[7];
  pC[11] = pA[3] * pB[8] + pA[11] * pB[9] + pA[19] * pB[10] + pA[27] * pB[11] + pA[35] * pB[12] + pA[43] * pB[13] + pA[51] * pB[14] + pA[59] * pB[15];
  pC[19] = pA[3] * pB[16] + pA[11] * pB[17] + pA[19] * pB[18] + pA[27] * pB[19] + pA[35] * pB[20] + pA[43] * pB[21] + pA[51] * pB[22] + pA[59] * pB[23];
  pC[27] = pA[3] * pB[24] + pA[11] * pB[25] + pA[19] * pB[26] + pA[27] * pB[27] + pA[35] * pB[28] + pA[43] * pB[29] + pA[51] * pB[30] + pA[59] * pB[31];
  pC[35] = pA[3] * pB[32] + pA[11] * pB[33] + pA[19] * pB[34] + pA[27] * pB[35] + pA[35] * pB[36] + pA[43] * pB[37] + pA[51] * pB[38] + pA[59] * pB[39];
  pC[43] = pA[3] * pB[40] + pA[11] * pB[41] + pA[19] * pB[42] + pA[27] * pB[43] + pA[35] * pB[44] + pA[43] * pB[45] + pA[51] * pB[46] + pA[59] * pB[47];
  pC[51] = pA[3] * pB[48] + pA[11] * pB[49] + pA[19] * pB[50] + pA[27] * pB[51] + pA[35] * pB[52] + pA[43] * pB[53] + pA[51] * pB[54] + pA[59] * pB[55];
  pC[59] = pA[3] * pB[56] + pA[11] * pB[57] + pA[19] * pB[58] + pA[27] * pB[59] + pA[35] * pB[60] + pA[43] * pB[61] + pA[51] * pB[62] + pA[59] * pB[63];
  pC[4] = pA[4] * pB[0] + pA[12] * pB[1] + pA[20] * pB[2] + pA[28] * pB[3] + pA[36] * pB[4] + pA[44] * pB[5] + pA[52] * pB[6] + pA[60] * pB[7];
  pC[12] = pA[4] * pB[8] + pA[12] * pB[9] + pA[20] * pB[10] + pA[28] * pB[11] + pA[36] * pB[12] + pA[44] * pB[13] + pA[52] * pB[14] + pA[60] * pB[15];
  pC[20] = pA[4] * pB[16] + pA[12] * pB[17] + pA[20] * pB[18] + pA[28] * pB[19] + pA[36] * pB[20] + pA[44] * pB[21] + pA[52] * pB[22] + pA[60] * pB[23];
  pC[28] = pA[4] * pB[24] + pA[12] * pB[25] + pA[20] * pB[26] + pA[28] * pB[27] + pA[36] * pB[28] + pA[44] * pB[29] + pA[52] * pB[30] + pA[60] * pB[31];
  pC[36] = pA[4] * pB[32] + pA[12] * pB[33] + pA[20] * pB[34] + pA[28] * pB[35] + pA[36] * pB[36] + pA[44] * pB[37] + pA[52] * pB[38] + pA[60] * pB[39];
  pC[44] = pA[4] * pB[40] + pA[12] * pB[41] + pA[20] * pB[42] + pA[28] * pB[43] + pA[36] * pB[44] + pA[44] * pB[45] + pA[52] * pB[46] + pA[60] * pB[47];
  pC[52] = pA[4] * pB[48] + pA[12] * pB[49] + pA[20] * pB[50] + pA[28] * pB[51] + pA[36] * pB[52] + pA[44] * pB[53] + pA[52] * pB[54] + pA[60] * pB[55];
  pC[60] = pA[4] * pB[56] + pA[12] * pB[57] + pA[20] * pB[58] + pA[28] * pB[59] + pA[36] * pB[60] + pA[44] * pB[61] + pA[52] * pB[62] + pA[60] * pB[63];
  pC[5] = pA[5] * pB[0] + pA[13] * pB[1] + pA[21] * pB[2] + pA[29] * pB[3] + pA[37] * pB[4] + pA[45] * pB[5] + pA[53] * pB[6] + pA[61] * pB[7];
  pC[13] = pA[5] * pB[8] + pA[13] * pB[9] + pA[21] * pB[10] + pA[29] * pB[11] + pA[37] * pB[12] + pA[45] * pB[13] + pA[53] * pB[14] + pA[61] * pB[15];
  pC[21] = pA[5] * pB[16] + pA[13] * pB[17] + pA[21] * pB[18] + pA[29] * pB[19] + pA[37] * pB[20] + pA[45] * pB[21] + pA[53] * pB[22] + pA[61] * pB[23];
  pC[29] = pA[5] * pB[24] + pA[13] * pB[25] + pA[21] * pB[26] + pA[29] * pB[27] + pA[37] * pB[28] + pA[45] * pB[29] + pA[53] * pB[30] + pA[61] * pB[31];
  pC[37] = pA[5] * pB[32] + pA[13] * pB[33] + pA[21] * pB[34] + pA[29] * pB[35] + pA[37] * pB[36] + pA[45] * pB[37] + pA[53] * pB[38] + pA[61] * pB[39];
  pC[45] = pA[5] * pB[40] + pA[13] * pB[41] + pA[21] * pB[42] + pA[29] * pB[43] + pA[37] * pB[44] + pA[45] * pB[45] + pA[53] * pB[46] + pA[61] * pB[47];
  pC[53] = pA[5] * pB[48] + pA[13] * pB[49] + pA[21] * pB[50] + pA[29] * pB[51] + pA[37] * pB[52] + pA[45] * pB[53] + pA[53] * pB[54] + pA[61] * pB[55];
  pC[61] = pA[5] * pB[56] + pA[13] * pB[57] + pA[21] * pB[58] + pA[29] * pB[59] + pA[37] * pB[60] + pA[45] * pB[61] + pA[53] * pB[62] + pA[61] * pB[63];
  pC[6] = pA[6] * pB[0] + pA[14] * pB[1] + pA[22] * pB[2] + pA[30] * pB[3] + pA[38] * pB[4] + pA[46] * pB[5] + pA[54] * pB[6] + pA[62] * pB[7];
  pC[14] = pA[6] * pB[8] + pA[14] * pB[9] + pA[22] * pB[10] + pA[30] * pB[11] + pA[38] * pB[12] + pA[46] * pB[13] + pA[54] * pB[14] + pA[62] * pB[15];
  pC[22] = pA[6] * pB[16] + pA[14] * pB[17] + pA[22] * pB[18] + pA[30] * pB[19] + pA[38] * pB[20] + pA[46] * pB[21] + pA[54] * pB[22] + pA[62] * pB[23];
  pC[30] = pA[6] * pB[24] + pA[14] * pB[25] + pA[22] * pB[26] + pA[30] * pB[27] + pA[38] * pB[28] + pA[46] * pB[29] + pA[54] * pB[30] + pA[62] * pB[31];
  pC[38] = pA[6] * pB[32] + pA[14] * pB[33] + pA[22] * pB[34] + pA[30] * pB[35] + pA[38] * pB[36] + pA[46] * pB[37] + pA[54] * pB[38] + pA[62] * pB[39];
  pC[46] = pA[6] * pB[40] + pA[14] * pB[41] + pA[22] * pB[42] + pA[30] * pB[43] + pA[38] * pB[44] + pA[46] * pB[45] + pA[54] * pB[46] + pA[62] * pB[47];
  pC[54] = pA[6] * pB[48] + pA[14] * pB[49] + pA[22] * pB[50] + pA[30] * pB[51] + pA[38] * pB[52] + pA[46] * pB[53] + pA[54] * pB[54] + pA[62] * pB[55];
  pC[62] = pA[6] * pB[56] + pA[14] * pB[57] + pA[22] * pB[58] + pA[30] * pB[59] + pA[38] * pB[60] + pA[46] * pB[61] + pA[54] * pB[62] + pA[62] * pB[63];
  pC[7] = pA[7] * pB[0] + pA[15] * pB[1] + pA[23] * pB[2] + pA[31] * pB[3] + pA[39] * pB[4] + pA[47] * pB[5] + pA[55] * pB[6] + pA[63] * pB[7];
  pC[15] = pA[7] * pB[8] + pA[15] * pB[9] + pA[23] * pB[10] + pA[31] * pB[11] + pA[39] * pB[12] + pA[47] * pB[13] + pA[55] * pB[14] + pA[63] * pB[15];
  pC[23] = pA[7] * pB[16] + pA[15] * pB[17] + pA[23] * pB[18] + pA[31] * pB[19] + pA[39] * pB[20] + pA[47] * pB[21] + pA[55] * pB[22] + pA[63] * pB[23];
  pC[31] = pA[7] * pB[24] + pA[15] * pB[25] + pA[23] * pB[26] + pA[31] * pB[27] + pA[39] * pB[28] + pA[47] * pB[29] + pA[55] * pB[30] + pA[63] * pB[31];
  pC[39] = pA[7] * pB[32] + pA[15] * pB[33] + pA[23] * pB[34] + pA[31] * pB[35] + pA[39] * pB[36] + pA[47] * pB[37] + pA[55] * pB[38] + pA[63] * pB[39];
  pC[47] = pA[7] * pB[40] + pA[15] * pB[41] + pA[23] * pB[42] + pA[31] * pB[43] + pA[39] * pB[44] + pA[47] * pB[45] + pA[55] * pB[46] + pA[63] * pB[47];
  pC[55] = pA[7] * pB[48] + pA[15] * pB[49] + pA[23] * pB[50] + pA[31] * pB[51] + pA[39] * pB[52] + pA[47] * pB[53] + pA[55] * pB[54] + pA[63] * pB[55];
  pC[63] = pA[7] * pB[56] + pA[15] * pB[57] + pA[23] * pB[58] + pA[31] * pB[59] + pA[39] * pB[60] + pA[47] * pB[61] + pA[55] * pB[62] + pA[63] * pB[63];

  return C;
}

//////////////////////////////////////////////////
// This function is AUTOGENERATED. Do not edit! //
//////////////////////////////////////////////////
inline ActsMatrix<8, 6> multiply(const ActsMatrix<8, 8>& A, const ActsMatrix<8, 6>& B) {
  ActsMatrix<8, 6> C;double* pC = C.data();
  const double* pA = A.data();
  const double* pB = B.data();

  pC[0] = pA[0] * pB[0] + pA[8] * pB[1] + pA[16] * pB[2] + pA[24] * pB[3] + pA[32] * pB[4] + pA[40] * pB[5] + pA[48] * pB[6] + pA[56] * pB[7];
  pC[8] = pA[0] * pB[8] + pA[8] * pB[9] + pA[16] * pB[10] + pA[24] * pB[11] + pA[32] * pB[12] + pA[40] * pB[13] + pA[48] * pB[14] + pA[56] * pB[15];
  pC[16] = pA[0] * pB[16] + pA[8] * pB[17] + pA[16] * pB[18] + pA[24] * pB[19] + pA[32] * pB[20] + pA[40] * pB[21] + pA[48] * pB[22] + pA[56] * pB[23];
  pC[24] = pA[0] * pB[24] + pA[8] * pB[25] + pA[16] * pB[26] + pA[24] * pB[27] + pA[32] * pB[28] + pA[40] * pB[29] + pA[48] * pB[30] + pA[56] * pB[31];
  pC[32] = pA[0] * pB[32] + pA[8] * pB[33] + pA[16] * pB[34] + pA[24] * pB[35] + pA[32] * pB[36] + pA[40] * pB[37] + pA[48] * pB[38] + pA[56] * pB[39];
  pC[40] = pA[0] * pB[40] + pA[8] * pB[41] + pA[16] * pB[42] + pA[24] * pB[43] + pA[32] * pB[44] + pA[40] * pB[45] + pA[48] * pB[46] + pA[56] * pB[47];
  pC[1] = pA[1] * pB[0] + pA[9] * pB[1] + pA[17] * pB[2] + pA[25] * pB[3] + pA[33] * pB[4] + pA[41] * pB[5] + pA[49] * pB[6] + pA[57] * pB[7];
  pC[9] = pA[1] * pB[8] + pA[9] * pB[9] + pA[17] * pB[10] + pA[25] * pB[11] + pA[33] * pB[12] + pA[41] * pB[13] + pA[49] * pB[14] + pA[57] * pB[15];
  pC[17] = pA[1] * pB[16] + pA[9] * pB[17] + pA[17] * pB[18] + pA[25] * pB[19] + pA[33] * pB[20] + pA[41] * pB[21] + pA[49] * pB[22] + pA[57] * pB[23];
  pC[25] = pA[1] * pB[24] + pA[9] * pB[25] + pA[17] * pB[26] + pA[25] * pB[27] + pA[33] * pB[28] + pA[41] * pB[29] + pA[49] * pB[30] + pA[57] * pB[31];
  pC[33] = pA[1] * pB[32] + pA[9] * pB[33] + pA[17] * pB[34] + pA[25] * pB[35] + pA[33] * pB[36] + pA[41] * pB[37] + pA[49] * pB[38] + pA[57] * pB[39];
  pC[41] = pA[1] * pB[40] + pA[9] * pB[41] + pA[17] * pB[42] + pA[25] * pB[43] + pA[33] * pB[44] + pA[41] * pB[45] + pA[49] * pB[46] + pA[57] * pB[47];
  pC[2] = pA[2] * pB[0] + pA[10] * pB[1] + pA[18] * pB[2] + pA[26] * pB[3] + pA[34] * pB[4] + pA[42] * pB[5] + pA[50] * pB[6] + pA[58] * pB[7];
  pC[10] = pA[2] * pB[8] + pA[10] * pB[9] + pA[18] * pB[10] + pA[26] * pB[11] + pA[34] * pB[12] + pA[42] * pB[13] + pA[50] * pB[14] + pA[58] * pB[15];
  pC[18] = pA[2] * pB[16] + pA[10] * pB[17] + pA[18] * pB[18] + pA[26] * pB[19] + pA[34] * pB[20] + pA[42] * pB[21] + pA[50] * pB[22] + pA[58] * pB[23];
  pC[26] = pA[2] * pB[24] + pA[10] * pB[25] + pA[18] * pB[26] + pA[26] * pB[27] + pA[34] * pB[28] + pA[42] * pB[29] + pA[50] * pB[30] + pA[58] * pB[31];
  pC[34] = pA[2] * pB[32] + pA[10] * pB[33] + pA[18] * pB[34] + pA[26] * pB[35] + pA[34] * pB[36] + pA[42] * pB[37] + pA[50] * pB[38] + pA[58] * pB[39];
  pC[42] = pA[2] * pB[40] + pA[10] * pB[41] + pA[18] * pB[42] + pA[26] * pB[43] + pA[34] * pB[44] + pA[42] * pB[45] + pA[50] * pB[46] + pA[58] * pB[47];
  pC[3] = pA[3] * pB[0] + pA[11] * pB[1] + pA[19] * pB[2] + pA[27] * pB[3] + pA[35] * pB[4] + pA[43] * pB[5] + pA[51] * pB[6] + pA[59] * pB[7];
  pC[11] = pA[3] * pB[8] + pA[11] * pB[9] + pA[19] * pB[10] + pA[27] * pB[11] + pA[35] * pB[12] + pA[43] * pB[13] + pA[51] * pB[14] + pA[59] * pB[15];
  pC[19] = pA[3] * pB[16] + pA[11] * pB[17] + pA[19] * pB[18] + pA[27] * pB[19] + pA[35] * pB[20] + pA[43] * pB[21] + pA[51] * pB[22] + pA[59] * pB[23];
  pC[27] = pA[3] * pB[24] + pA[11] * pB[25] + pA[19] * pB[26] + pA[27] * pB[27] + pA[35] * pB[28] + pA[43] * pB[29] + pA[51] * pB[30] + pA[59] * pB[31];
  pC[35] = pA[3] * pB[32] + pA[11] * pB[33] + pA[19] * pB[34] + pA[27] * pB[35] + pA[35] * pB[36] + pA[43] * pB[37] + pA[51] * pB[38] + pA[59] * pB[39];
  pC[43] = pA[3] * pB[40] + pA[11] * pB[41] + pA[19] * pB[42] + pA[27] * pB[43] + pA[35] * pB[44] + pA[43] * pB[45] + pA[51] * pB[46] + pA[59] * pB[47];
  pC[4] = pA[4] * pB[0] + pA[12] * pB[1] + pA[20] * pB[2] + pA[28] * pB[3] + pA[36] * pB[4] + pA[44] * pB[5] + pA[52] * pB[6] + pA[60] * pB[7];
  pC[12] = pA[4] * pB[8] + pA[12] * pB[9] + pA[20] * pB[10] + pA[28] * pB[11] + pA[36] * pB[12] + pA[44] * pB[13] + pA[52] * pB[14] + pA[60] * pB[15];
  pC[20] = pA[4] * pB[16] + pA[12] * pB[17] + pA[20] * pB[18] + pA[28] * pB[19] + pA[36] * pB[20] + pA[44] * pB[21] + pA[52] * pB[22] + pA[60] * pB[23];
  pC[28] = pA[4] * pB[24] + pA[12] * pB[25] + pA[20] * pB[26] + pA[28] * pB[27] + pA[36] * pB[28] + pA[44] * pB[29] + pA[52] * pB[30] + pA[60] * pB[31];
  pC[36] = pA[4] * pB[32] + pA[12] * pB[33] + pA[20] * pB[34] + pA[28] * pB[35] + pA[36] * pB[36] + pA[44] * pB[37] + pA[52] * pB[38] + pA[60] * pB[39];
  pC[44] = pA[4] * pB[40] + pA[12] * pB[41] + pA[20] * pB[42] + pA[28] * pB[43] + pA[36] * pB[44] + pA[44] * pB[45] + pA[52] * pB[46] + pA[60] * pB[47];
  pC[5] = pA[5] * pB[0] + pA[13] * pB[1] + pA[21] * pB[2] + pA[29] * pB[3] + pA[37] * pB[4] + pA[45] * pB[5] + pA[53] * pB[6] + pA[61] * pB[7];
  pC[13] = pA[5] * pB[8] + pA[13] * pB[9] + pA[21] * pB[10] + pA[29] * pB[11] + pA[37] * pB[12] + pA[45] * pB[13] + pA[53] * pB[14] + pA[61] * pB[15];
  pC[21] = pA[5] * pB[16] + pA[13] * pB[17] + pA[21] * pB[18] + pA[29] * pB[19] + pA[37] * pB[20] + pA[45] * pB[21] + pA[53] * pB[22] + pA[61] * pB[23];
  pC[29] = pA[5] * pB[24] + pA[13] * pB[25] + pA[21] * pB[26] + pA[29] * pB[27] + pA[37] * pB[28] + pA[45] * pB[29] + pA[53] * pB[30] + pA[61] * pB[31];
  pC[37] = pA[5] * pB[32] + pA[13] * pB[33] + pA[21] * pB[34] + pA[29] * pB[35] + pA[37] * pB[36] + pA[45] * pB[37] + pA[53] * pB[38] + pA[61] * pB[39];
  pC[45] = pA[5] * pB[40] + pA[13] * pB[41] + pA[21] * pB[42] + pA[29] * pB[43] + pA[37] * pB[44] + pA[45] * pB[45] + pA[53] * pB[46] + pA[61] * pB[47];
  pC[6] = pA[6] * pB[0] + pA[14] * pB[1] + pA[22] * pB[2] + pA[30] * pB[3] + pA[38] * pB[4] + pA[46] * pB[5] + pA[54] * pB[6] + pA[62] * pB[7];
  pC[14] = pA[6] * pB[8] + pA[14] * pB[9] + pA[22] * pB[10] + pA[30] * pB[11] + pA[38] * pB[12] + pA[46] * pB[13] + pA[54] * pB[14] + pA[62] * pB[15];
  pC[22] = pA[6] * pB[16] + pA[14] * pB[17] + pA[22] * pB[18] + pA[30] * pB[19] + pA[38] * pB[20] + pA[46] * pB[21] + pA[54] * pB[22] + pA[62] * pB[23];
  pC[30] = pA[6] * pB[24] + pA[14] * pB[25] + pA[22] * pB[26] + pA[30] * pB[27] + pA[38] * pB[28] + pA[46] * pB[29] + pA[54] * pB[30] + pA[62] * pB[31];
  pC[38] = pA[6] * pB[32] + pA[14] * pB[33] + pA[22] * pB[34] + pA[30] * pB[35] + pA[38] * pB[36] + pA[46] * pB[37] + pA[54] * pB[38] + pA[62] * pB[39];
  pC[46] = pA[6] * pB[40] + pA[14] * pB[41] + pA[22] * pB[42] + pA[30] * pB[43] + pA[38] * pB[44] + pA[46] * pB[45] + pA[54] * pB[46] + pA[62] * pB[47];
  pC[7] = pA[7] * pB[0] + pA[15] * pB[1] + pA[23] * pB[2] + pA[31] * pB[3] + pA[39] * pB[4] + pA[47] * pB[5] + pA[55] * pB[6] + pA[63] * pB[7];
  pC[15] = pA[7] * pB[8] + pA[15] * pB[9] + pA[23] * pB[10] + pA[31] * pB[11] + pA[39] * pB[12] + pA[47] * pB[13] + pA[55] * pB[14] + pA[63] * pB[15];
  pC[23] = pA[7] * pB[16] + pA[15] * pB[17] + pA[23] * pB[18] + pA[31] * pB[19] + pA[39] * pB[20] + pA[47] * pB[21] + pA[55] * pB[22] + pA[63] * pB[23];
  pC[31] = pA[7] * pB[24] + pA[15] * pB[25] + pA[23] * pB[26] + pA[31] * pB[27] + pA[39] * pB[28] + pA[47] * pB[29] + pA[55] * pB[30] + pA[63] * pB[31];
  pC[39] = pA[7] * pB[32] + pA[15] * pB[33] + pA[23] * pB[34] + pA[31] * pB[35] + pA[39] * pB[36] + pA[47] * pB[37] + pA[55] * pB[38] + pA[63] * pB[39];
  pC[47] = pA[7] * pB[40] + pA[15] * pB[41] + pA[23] * pB[42] + pA[31] * pB[43] + pA[39] * pB[44] + pA[47] * pB[45] + pA[55] * pB[46] + pA[63] * pB[47];

  return C;
}

//////////////////////////////////////////////////
// This function is AUTOGENERATED. Do not edit! //
//////////////////////////////////////////////////
inline ActsMatrix<6, 6> multiply(const ActsMatrix<6, 8>& A, const ActsMatrix<8, 6>& B) {
  ActsMatrix<6, 6> C;double* pC = C.data();
  const double* pA = A.data();
  const double* pB = B.data();

  pC[0] = pA[0] * pB[0] + pA[6] * pB[1] + pA[12] * pB[2] + pA[18] * pB[3] + pA[24] * pB[4] + pA[30] * pB[5] + pA[36] * pB[6] + pA[42] * pB[7];
  pC[6] = pA[0] * pB[8] + pA[6] * pB[9] + pA[12] * pB[10] + pA[18] * pB[11] + pA[24] * pB[12] + pA[30] * pB[13] + pA[36] * pB[14] + pA[42] * pB[15];
  pC[12] = pA[0] * pB[16] + pA[6] * pB[17] + pA[12] * pB[18] + pA[18] * pB[19] + pA[24] * pB[20] + pA[30] * pB[21] + pA[36] * pB[22] + pA[42] * pB[23];
  pC[18] = pA[0] * pB[24] + pA[6] * pB[25] + pA[12] * pB[26] + pA[18] * pB[27] + pA[24] * pB[28] + pA[30] * pB[29] + pA[36] * pB[30] + pA[42] * pB[31];
  pC[24] = pA[0] * pB[32] + pA[6] * pB[33] + pA[12] * pB[34] + pA[18] * pB[35] + pA[24] * pB[36] + pA[30] * pB[37] + pA[36] * pB[38] + pA[42] * pB[39];
  pC[30] = pA[0] * pB[40] + pA[6] * pB[41] + pA[12] * pB[42] + pA[18] * pB[43] + pA[24] * pB[44] + pA[30] * pB[45] + pA[36] * pB[46] + pA[42] * pB[47];
  pC[1] = pA[1] * pB[0] + pA[7] * pB[1] + pA[13] * pB[2] + pA[19] * pB[3] + pA[25] * pB[4] + pA[31] * pB[5] + pA[37] * pB[6] + pA[43] * pB[7];
  pC[7] = pA[1] * pB[8] + pA[7] * pB[9] + pA[13] * pB[10] + pA[19] * pB[11] + pA[25] * pB[12] + pA[31] * pB[13] + pA[37] * pB[14] + pA[43] * pB[15];
  pC[13] = pA[1] * pB[16] + pA[7] * pB[17] + pA[13] * pB[18] + pA[19] * pB[19] + pA[25] * pB[20] + pA[31] * pB[21] + pA[37] * pB[22] + pA[43] * pB[23];
  pC[19] = pA[1] * pB[24] + pA[7] * pB[25] + pA[13] * pB[26] + pA[19] * pB[27] + pA[25] * pB[28] + pA[31] * pB[29] + pA[37] * pB[30] + pA[43] * pB[31];
  pC[25] = pA[1] * pB[32] + pA[7] * pB[33] + pA[13] * pB[34] + pA[19] * pB[35] + pA[25] * pB[36] + pA[31] * pB[37] + pA[37] * pB[38] + pA[43] * pB[39];
  pC[31] = pA[1] * pB[40] + pA[7] * pB[41] + pA[13] * pB[42] + pA[19] * pB[43] + pA[25] * pB[44] + pA[31] * pB[45] + pA[37] * pB[46] + pA[43] * pB[47];
  pC[2] = pA[2] * pB[0] + pA[8] * pB[1] + pA[14] * pB[2] + pA[20] * pB[3] + pA[26] * pB[4] + pA[32] * pB[5] + pA[38] * pB[6] + pA[44] * pB[7];
  pC[8] = pA[2] * pB[8] + pA[8] * pB[9] + pA[14] * pB[10] + pA[20] * pB[11] + pA[26] * pB[12] + pA[32] * pB[13] + pA[38] * pB[14] + pA[44] * pB[15];
  pC[14] = pA[2] * pB[16] + pA[8] * pB[17] + pA[14] * pB[18] + pA[20] * pB[19] + pA[26] * pB[20] + pA[32] * pB[21] + pA[38] * pB[22] + pA[44] * pB[23];
  pC[20] = pA[2] * pB[24] + pA[8] * pB[25] + pA[14] * pB[26] + pA[20] * pB[27] + pA[26] * pB[28] + pA[32] * pB[29] + pA[38] * pB[30] + pA[44] * pB[31];
  pC[26] = pA[2] * pB[32] + pA[8] * pB[33] + pA[14] * pB[34] + pA[20] * pB[35] + pA[26] * pB[36] + pA[32] * pB[37] + pA[38] * pB[38] + pA[44] * pB[39];
  pC[32] = pA[2] * pB[40] + pA[8] * pB[41] + pA[14] * pB[42] + pA[20] * pB[43] + pA[26] * pB[44] + pA[32] * pB[45] + pA[38] * pB[46] + pA[44] * pB[47];
  pC[3] = pA[3] * pB[0] + pA[9] * pB[1] + pA[15] * pB[2] + pA[21] * pB[3] + pA[27] * pB[4] + pA[33] * pB[5] + pA[39] * pB[6] + pA[45] * pB[7];
  pC[9] = pA[3] * pB[8] + pA[9] * pB[9] + pA[15] * pB[10] + pA[21] * pB[11] + pA[27] * pB[12] + pA[33] * pB[13] + pA[39] * pB[14] + pA[45] * pB[15];
  pC[15] = pA[3] * pB[16] + pA[9] * pB[17] + pA[15] * pB[18] + pA[21] * pB[19] + pA[27] * pB[20] + pA[33] * pB[21] + pA[39] * pB[22] + pA[45] * pB[23];
  pC[21] = pA[3] * pB[24] + pA[9] * pB[25] + pA[15] * pB[26] + pA[21] * pB[27] + pA[27] * pB[28] + pA[33] * pB[29] + pA[39] * pB[30] + pA[45] * pB[31];
  pC[27] = pA[3] * pB[32] + pA[9] * pB[33] + pA[15] * pB[34] + pA[21] * pB[35] + pA[27] * pB[36] + pA[33] * pB[37] + pA[39] * pB[38] + pA[45] * pB[39];
  pC[33] = pA[3] * pB[40] + pA[9] * pB[41] + pA[15] * pB[42] + pA[21] * pB[43] + pA[27] * pB[44] + pA[33] * pB[45] + pA[39] * pB[46] + pA[45] * pB[47];
  pC[4] = pA[4] * pB[0] + pA[10] * pB[1] + pA[16] * pB[2] + pA[22] * pB[3] + pA[28] * pB[4] + pA[34] * pB[5] + pA[40] * pB[6] + pA[46] * pB[7];
  pC[10] = pA[4] * pB[8] + pA[10] * pB[9] + pA[16] * pB[10] + pA[22] * pB[11] + pA[28] * pB[12] + pA[34] * pB[13] + pA[40] * pB[14] + pA[46] * pB[15];
  pC[16] = pA[4] * pB[16] + pA[10] * pB[17] + pA[16] * pB[18] + pA[22] * pB[19] + pA[28] * pB[20] + pA[34] * pB[21] + pA[40] * pB[22] + pA[46] * pB[23];
  pC[22] = pA[4] * pB[24] + pA[10] * pB[25] + pA[16] * pB[26] + pA[22] * pB[27] + pA[28] * pB[28] + pA[34] * pB[29] + pA[40] * pB[30] + pA[46] * pB[31];
  pC[28] = pA[4] * pB[32] + pA[10] * pB[33] + pA[16] * pB[34] + pA[22] * pB[35] + pA[28] * pB[36] + pA[34] * pB[37] + pA[40] * pB[38] + pA[46] * pB[39];
  pC[34] = pA[4] * pB[40] + pA[10] * pB[41] + pA[16] * pB[42] + pA[22] * pB[43] + pA[28] * pB[44] + pA[34] * pB[45] + pA[40] * pB[46] + pA[46] * pB[47];
  pC[5] = pA[5] * pB[0] + pA[11] * pB[1] + pA[17] * pB[2] + pA[23] * pB[3] + pA[29] * pB[4] + pA[35] * pB[5] + pA[41] * pB[6] + pA[47] * pB[7];
  pC[11] = pA[5] * pB[8] + pA[11] * pB[9] + pA[17] * pB[10] + pA[23] * pB[11] + pA[29] * pB[12] + pA[35] * pB[13] + pA[41] * pB[14] + pA[47] * pB[15];
  pC[17] = pA[5] * pB[16] + pA[11] * pB[17] + pA[17] * pB[18] + pA[23] * pB[19] + pA[29] * pB[20] + pA[35] * pB[21] + pA[41] * pB[22] + pA[47] * pB[23];
  pC[23] = pA[5] * pB[24] + pA[11] * pB[25] + pA[17] * pB[26] + pA[23] * pB[27] + pA[29] * pB[28] + pA[35] * pB[29] + pA[41] * pB[30] + pA[47] * pB[31];
  pC[29] = pA[5] * pB[32] + pA[11] * pB[33] + pA[17] * pB[34] + pA[23] * pB[35] + pA[29] * pB[36] + pA[35] * pB[37] + pA[41] * pB[38] + pA[47] * pB[39];
  pC[35] = pA[5] * pB[40] + pA[11] * pB[41] + pA[17] * pB[42] + pA[23] * pB[43] + pA[29] * pB[44] + pA[35] * pB[45] + pA[41] * pB[46] + pA[47] * pB[47];

  return C;
}

//////////////////////////////////////////////////
// This function is AUTOGENERATED. Do not edit! //
//////////////////////////////////////////////////
inline ActsMatrix<6, 6> multiply(const ActsMatrix<6, 6>& A, const ActsMatrix<6, 6>& B) {
  ActsMatrix<6, 6> C;double* pC = C.data();
  const double* pA = A.data();
  const double* pB = B.data();

  pC[0] = pA[0] * pB[0] + pA[6] * pB[1] + pA[12] * pB[2] + pA[18] * pB[3] + pA[24] * pB[4] + pA[30] * pB[5];
  pC[6] = pA[0] * pB[6] + pA[6] * pB[7] + pA[12] * pB[8] + pA[18] * pB[9] + pA[24] * pB[10] + pA[30] * pB[11];
  pC[12] = pA[0] * pB[12] + pA[6] * pB[13] + pA[12] * pB[14] + pA[18] * pB[15] + pA[24] * pB[16] + pA[30] * pB[17];
  pC[18] = pA[0] * pB[18] + pA[6] * pB[19] + pA[12] * pB[20] + pA[18] * pB[21] + pA[24] * pB[22] + pA[30] * pB[23];
  pC[24] = pA[0] * pB[24] + pA[6] * pB[25] + pA[12] * pB[26] + pA[18] * pB[27] + pA[24] * pB[28] + pA[30] * pB[29];
  pC[30] = pA[0] * pB[30] + pA[6] * pB[31] + pA[12] * pB[32] + pA[18] * pB[33] + pA[24] * pB[34] + pA[30] * pB[35];
  pC[1] = pA[1] * pB[0] + pA[7] * pB[1] + pA[13] * pB[2] + pA[19] * pB[3] + pA[25] * pB[4] + pA[31] * pB[5];
  pC[7] = pA[1] * pB[6] + pA[7] * pB[7] + pA[13] * pB[8] + pA[19] * pB[9] + pA[25] * pB[10] + pA[31] * pB[11];
  pC[13] = pA[1] * pB[12] + pA[7] * pB[13] + pA[13] * pB[14] + pA[19] * pB[15] + pA[25] * pB[16] + pA[31] * pB[17];
  pC[19] = pA[1] * pB[18] + pA[7] * pB[19] + pA[13] * pB[20] + pA[19] * pB[21] + pA[25] * pB[22] + pA[31] * pB[23];
  pC[25] = pA[1] * pB[24] + pA[7] * pB[25] + pA[13] * pB[26] + pA[19] * pB[27] + pA[25] * pB[28] + pA[31] * pB[29];
  pC[31] = pA[1] * pB[30] + pA[7] * pB[31] + pA[13] * pB[32] + pA[19] * pB[33] + pA[25] * pB[34] + pA[31] * pB[35];
  pC[2] = pA[2] * pB[0] + pA[8] * pB[1] + pA[14] * pB[2] + pA[20] * pB[3] + pA[26] * pB[4] + pA[32] * pB[5];
  pC[8] = pA[2] * pB[6] + pA[8] * pB[7] + pA[14] * pB[8] + pA[20] * pB[9] + pA[26] * pB[10] + pA[32] * pB[11];
  pC[14] = pA[2] * pB[12] + pA[8] * pB[13] + pA[14] * pB[14] + pA[20] * pB[15] + pA[26] * pB[16] + pA[32] * pB[17];
  pC[20] = pA[2] * pB[18] + pA[8] * pB[19] + pA[14] * pB[20] + pA[20] * pB[21] + pA[26] * pB[22] + pA[32] * pB[23];
  pC[26] = pA[2] * pB[24] + pA[8] * pB[25] + pA[14] * pB[26] + pA[20] * pB[27] + pA[26] * pB[28] + pA[32] * pB[29];
  pC[32] = pA[2] * pB[30] + pA[8] * pB[31] + pA[14] * pB[32] + pA[20] * pB[33] + pA[26] * pB[34] + pA[32] * pB[35];
  pC[3] = pA[3] * pB[0] + pA[9] * pB[1] + pA[15] * pB[2] + pA[21] * pB[3] + pA[27] * pB[4] + pA[33] * pB[5];
  pC[9] = pA[3] * pB[6] + pA[9] * pB[7] + pA[15] * pB[8] + pA[21] * pB[9] + pA[27] * pB[10] + pA[33] * pB[11];
  pC[15] = pA[3] * pB[12] + pA[9] * pB[13] + pA[15] * pB[14] + pA[21] * pB[15] + pA[27] * pB[16] + pA[33] * pB[17];
  pC[21] = pA[3] * pB[18] + pA[9] * pB[19] + pA[15] * pB[20] + pA[21] * pB[21] + pA[27] * pB[22] + pA[33] * pB[23];
  pC[27] = pA[3] * pB[24] + pA[9] * pB[25] + pA[15] * pB[26] + pA[21] * pB[27] + pA[27] * pB[28] + pA[33] * pB[29];
  pC[33] = pA[3] * pB[30] + pA[9] * pB[31] + pA[15] * pB[32] + pA[21] * pB[33] + pA[27] * pB[34] + pA[33] * pB[35];
  pC[4] = pA[4] * pB[0] + pA[10] * pB[1] + pA[16] * pB[2] + pA[22] * pB[3] + pA[28] * pB[4] + pA[34] * pB[5];
  pC[10] = pA[4] * pB[6] + pA[10] * pB[7] + pA[16] * pB[8] + pA[22] * pB[9] + pA[28] * pB[10] + pA[34] * pB[11];
  pC[16] = pA[4] * pB[12] + pA[10] * pB[13] + pA[16] * pB[14] + pA[22] * pB[15] + pA[28] * pB[16] + pA[34] * pB[17];
  pC[22] = pA[4] * pB[18] + pA[10] * pB[19] + pA[16] * pB[20] + pA[22] * pB[21] + pA[28] * pB[22] + pA[34] * pB[23];
  pC[28] = pA[4] * pB[24] + pA[10] * pB[25] + pA[16] * pB[26] + pA[22] * pB[27] + pA[28] * pB[28] + pA[34] * pB[29];
  pC[34] = pA[4] * pB[30] + pA[10] * pB[31] + pA[16] * pB[32] + pA[22] * pB[33] + pA[28] * pB[34] + pA[34] * pB[35];
  pC[5] = pA[5] * pB[0] + pA[11] * pB[1] + pA[17] * pB[2] + pA[23] * pB[3] + pA[29] * pB[4] + pA[35] * pB[5];
  pC[11] = pA[5] * pB[6] + pA[11] * pB[7] + pA[17] * pB[8] + pA[23] * pB[9] + pA[29] * pB[10] + pA[35] * pB[11];
  pC[17] = pA[5] * pB[12] + pA[11] * pB[13] + pA[17] * pB[14] + pA[23] * pB[15] + pA[29] * pB[16] + pA[35] * pB[17];
  pC[23] = pA[5] * pB[18] + pA[11] * pB[19] + pA[17] * pB[20] + pA[23] * pB[21] + pA[29] * pB[22] + pA[35] * pB[23];
  pC[29] = pA[5] * pB[24] + pA[11] * pB[25] + pA[17] * pB[26] + pA[23] * pB[27] + pA[29] * pB[28] + pA[35] * pB[29];
  pC[35] = pA[5] * pB[30] + pA[11] * pB[31] + pA[17] * pB[32] + pA[23] * pB[33] + pA[29] * pB[34] + pA[35] * pB[35];

  return C;
}

//////////////////////////////////////////////////
// This function is AUTOGENERATED. Do not edit! //
//////////////////////////////////////////////////
inline ActsMatrix<6, 6> transpose(const ActsMatrix<6, 6>& A) {
  ActsMatrix<6, 6> B;
  double* pB = B.data();
  const double* pA = A.data();
  pB[0] = pA[0];
  pB[6] = pA[1];
  pB[12] = pA[2];
  pB[18] = pA[3];
  pB[24] = pA[4];
  pB[30] = pA[5];
  pB[1] = pA[6];
  pB[7] = pA[7];
  pB[13] = pA[8];
  pB[19] = pA[9];
  pB[25] = pA[10];
  pB[31] = pA[11];
  pB[2] = pA[12];
  pB[8] = pA[13];
  pB[14] = pA[14];
  pB[20] = pA[15];
  pB[26] = pA[16];
  pB[32] = pA[17];
  pB[3] = pA[18];
  pB[9] = pA[19];
  pB[15] = pA[20];
  pB[21] = pA[21];
  pB[27] = pA[22];
  pB[33] = pA[23];
  pB[4] = pA[24];
  pB[10] = pA[25];
  pB[16] = pA[26];
  pB[22] = pA[27];
  pB[28] = pA[28];
  pB[34] = pA[29];
  pB[5] = pA[30];
  pB[11] = pA[31];
  pB[17] = pA[32];
  pB[23] = pA[33];
  pB[29] = pA[34];
  pB[35] = pA[35];

  return B;
}
